#include<stdio.h>
#include<string.h>
#include<ctype.h>
char symtable[50][10];
char keyword[30][30]={"int","INT","float","FLOAT","varchar","VARCHAR","numeric","NUMERIC","select","SELECT","from","FROM",
	"where","WHERE","create","CREATE","table","TABLE","null","NULL","notnull", "NOTNULL"};
int check_keyword(char id[]){
	int i;
	for(i=0;i<24;i++)
	if(strcmp(id,keyword[i])==0)
	  return 1;
	return 0;
}
void symbol_table(char id[],int n){
	int flag=0;
	char c1[10];
	strcpy(c1,id);
	for(int j=0;j<n;j++){
		if(strcmp(c1,symtable[j])==0){
	     flag=1;
	 }
	}
     char *p[50];
	if(flag==0){
	for(int i=0;i<=10;i++){
    symtable[n][i]=id[i];
}
printf("%s\t%p\n",symtable[n],&symtable[n]);
}
}
int main(){

char id[20], num[10],rop[10],spcf[12];
 int state =1;


 FILE *f1,*f2;

 f1=fopen("cd3.txt","r");
 f2=fopen("newfile.txt","w");
 char c;
  int j=0;
  int i,l;
  int n=0;
          int k=0;
printf("---------------symbol_table----------\n");
printf("Identifiers stored \t Address of Identifiers\n");
 while((c=fgetc(f1))!=EOF){

 switch(state){
 	case 1:
 		    i=0;
 		   if(isalpha(c)){
 		   	state=2;
 		   	id[i]=c;
 		   	i++;
			}
			else if(isdigit(c)){
				state=3;
				num[j++]=c;
			}
			else if(c=='('||c==')'||c==','||c==';'||c=='"'){
				state=1;
			    fprintf(f2,"Delimiter:\t%c\n",c);
			}
			else{
			fprintf(f2,"%c\t\n",c);
			}
			break;
	case 2:
		  if(isalnum(c)){
		  	state=2;
		  	id[i++]=c;

		  }
		  else{
		  	   id[i]='\0';
		  	   if(check_keyword(id))
		  	   fprintf(f2,"Keyword:\t%s\n",id);
				else{

					fprintf(f2,"Identifier:\t%s\n",id);
					n++;
					symbol_table(id,n);
				}
			    state=1;
				i=0;
				ungetc(c,f1);

		  }
		  break;
 }
 }
 fclose(f1);
 fclose(f2);
 return 0;
}
